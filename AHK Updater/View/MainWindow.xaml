<Window
    x:Class="AHKUpdater.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Localization="clr-namespace:AHKUpdater.Localization"
    xmlns:Model="clr-namespace:AHKUpdater.Model"
    xmlns:r="clr-namespace:AHKUpdater.Properties"
    xmlns:System="clr-namespace:System;assembly=System.Runtime"
    xmlns:Validation="clr-namespace:AHKUpdater.Validations"
    xmlns:viewmodel="clr-namespace:AHKUpdater.ViewModel"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    d:DataContext="{d:DesignInstance Type=viewmodel:DataViewModel}"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="Window">
    <Window.SizeToContent>WidthAndHeight</Window.SizeToContent>
    <Window.WindowStartupLocation>CenterScreen</Window.WindowStartupLocation>
    <Window.InputBindings>
        <KeyBinding Command="{Binding CmdNew}" CommandParameter="{Binding ElementName=tabMain, Path=SelectedIndex}" Gesture="CTRL+N" />
        <KeyBinding Command="{Binding CmdSaveToFile}" CommandParameter="{Binding ElementName=tabMain, Path=SelectedIndex}" Gesture="CTRL+SHIFT+S" />
    </Window.InputBindings>
    <Window.Resources>
        <DataTemplate x:Key="DtMessagesTemplate">
            <TextBlock Text="{Binding Msg}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="Error">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Warning">
                                <Setter Property="Foreground" Value="Orange" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Success">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Info">
                                <Setter Property="Foreground" Value="Blue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>
        <GridLength x:Key="RowHeight">35</GridLength>
        <Thickness x:Key="StdMargin">5</Thickness>
        <Thickness x:Key="StdPadding">5</Thickness>
        <Style TargetType="Button" x:Key="BtnBaseStyle">
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="Button" x:Key="OpsButton" BasedOn="{StaticResource BtnBaseStyle}">
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>
        <Style TargetType="Button" x:Key="ExtractionButton" BasedOn="{StaticResource OpsButton}">
            <Setter Property="Content" Value="{x:Static Localization:Localization.BtnAddForExtractionContent}" />
            <Setter Property="IsEnabled" Value="True" />
        </Style>
        <Style TargetType="Button" x:Key="RemoveButton" BasedOn="{StaticResource OpsButton}">
            <Setter Property="Content" Value="{x:Static Localization:Localization.BtnDeleteContent}" />
            <Setter Property="Grid.Column" Value="3" />
            <Setter Property="IsEnabled" Value="True" />
        </Style>
        <Style TargetType="CheckBox" x:Key="CheckBoxBaseStyle">
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox" x:Key="ComboBoxBaseStyle">
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ItemsControl" x:Key="IcBaseStyle">
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
        </Style>
        <Style TargetType="ItemsControl" x:Key="IcMessages" BasedOn="{StaticResource IcBaseStyle}">
            <Setter Property="ItemTemplate" Value="{StaticResource DtMessagesTemplate}" />
        </Style>
        <Style TargetType="Label" x:Key="LblBaseStyle">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ListView" x:Key="LvBaseStyle">
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="SelectionMode" Value="Single" />
        </Style>
        <Style TargetType="ListViewItem" x:Key="LvImportStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="AhkFunction">
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="AhkHotstring">
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="AhkVariable">
                    <Setter Property="FontStyle" Value="Italic" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ScrollViewer" x:Key="SvImportStyle">
            <Setter Property="Grid.Row" Value="2" />
            <Setter Property="Grid.RowSpan" Value="{Binding ElementName=GridImport, Path=RowDefinitions.Count}" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="MaxHeight" Value="400" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        </Style>
        <Style TargetType="TextBox" x:Key="TbBaseStyle">
            <Setter Property="AcceptsReturn" Value="False" />
            <Setter Property="AcceptsTab" Value="False" />
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockError">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Margin" Value="{StaticResource StdMargin}" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="MinWidth" Value="1200" />
            <Setter Property="MinHeight" Value="800" />
        </Style>
    </Window.Style>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem x:Name="MenuItemNewCommand" Header="{x:Static Localization:Localization.MainMenuNewCommand}">
                <MenuItem x:Name="MenuItemNewFunction" Header="{x:Static Localization:Localization.MainMenuNewFunction}" Command="{Binding CmdNewFunction}" />
                <MenuItem x:Name="MenuItemNewHotstring" Header="{x:Static Localization:Localization.MainMenuNewHotstring}" Command="{Binding CmdNewHotstring}" />
                <MenuItem x:Name="MenuItemNewVariable" Header="{x:Static Localization:Localization.MainMenuNewVariable}" Command="{Binding CmdNewVariable}" />
            </MenuItem>
        </Menu>
        <TabControl x:Name="tabMain" Grid.Row="1">
            <TabItem x:Name="TiHotstrings" Header="{x:Static Localization:Localization.TiHotstringsHeader}" DataContext="{Binding HotstringVM, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                <TabItem.InputBindings>
                    <KeyBinding Command="{Binding CmdSaveCurrentlyActive}" Gesture="CTRL+S" />
                </TabItem.InputBindings>
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CvsHotstringList" Source="{Binding Path=HotstringList, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" IsLiveSortingRequested="True" IsLiveFilteringRequested="True">
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" PropertyName="Name" />
                        </CollectionViewSource.SortDescriptions>
                        <CollectionViewSource.LiveSortingProperties>
                            <System:String>Name</System:String>
                        </CollectionViewSource.LiveSortingProperties>
                    </CollectionViewSource>
                    <CollectionViewSource x:Key="CvsHotstringSystemList" Source="{Binding Path=HotstringSystemList, UpdateSourceTrigger=PropertyChanged}" IsLiveSortingRequested="True">
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                    <CollectionViewSource x:Key="CvsHotstringListOfSystems" Source="{Binding Path=HotstringSystemList, UpdateSourceTrigger=PropertyChanged}" IsLiveSortingRequested="True">
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ComboBox x:Name="CbHotstringSystems" DropDownOpened="CbHotstringSystems_DropDownOpened" SelectionChanged="CbHotstringSystems_SelectionChanged">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsHotstringSystemList}, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=SelectedSystem, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <ListView x:Name="LvHotstrings">
                        <ListView.Style>
                            <Style TargetType="ListView" BasedOn="{StaticResource LvBaseStyle}">
                                <Setter Property="DisplayMemberPath" Value="Name" />
                                <Setter Property="Grid.Row" Value="1" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsHotstringList}, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=SelectedHotstring, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                            </Style>
                        </ListView.Style>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <Grid x:Name="gridHotstring">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="DataContext" Value="{Binding Path=CurrentlyActive, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                                <Setter Property="Grid.Column" Value="1" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <Trigger Property="DataContext" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding New}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TbHotstringName}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label x:Name="LblHotstringNameTitle">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.LblHotstringNameTitleContent}" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox x:Name="TbHotstringName" Grid.Column="1">
                            <TextBox.Text>
                                <Binding>
                                    <Binding.Mode>TwoWay</Binding.Mode>
                                    <Binding.Path>Name</Binding.Path>
                                    <Binding.UpdateSourceTrigger>PropertyChanged</Binding.UpdateSourceTrigger>
                                    <Binding.NotifyOnValidationError>True</Binding.NotifyOnValidationError>
                                    <Binding.ValidatesOnDataErrors>True</Binding.ValidatesOnDataErrors>
                                </Binding>
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}" />
                            </TextBox.Style>
                        </TextBox>
                        <Label x:Name="LblHotstringSystemTitle" Grid.Row="1">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.LblHotstringSystemTitleContent}" />
                                    <Setter Property="Grid.Row" Value="1" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox x:Name="TbHotstringListOfSystems">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="Grid.Column" Value="1" />
                                    <Setter Property="Grid.Row" Value="1" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="Text" Value="{Binding System, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Label x:Name="LblHotstringMenuItemTitle">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.LblHotstringMenuItemTitleContent}" />
                                    <Setter Property="Grid.Row" Value="2" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox x:Name="TbHotstringMenuTitle">
                            <TextBox.Text>
                                <Binding>
                                    <Binding.NotifyOnValidationError>True</Binding.NotifyOnValidationError>
                                    <Binding.Path>MenuTitle</Binding.Path>
                                    <Binding.UpdateSourceTrigger>PropertyChanged</Binding.UpdateSourceTrigger>
                                    <Binding.ValidatesOnDataErrors>True</Binding.ValidatesOnDataErrors>
                                </Binding>
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="Grid.Column" Value="1" />
                                    <Setter Property="Grid.Row" Value="2" />
                                    <Setter Property="Text" Value="{Binding MenuTitle, UpdateSourceTrigger=PropertyChanged}" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <CheckBox x:Name="RbAdvancedHotstring">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.CbAdvancedHotstringContent}" />
                                    <Setter Property="Grid.Row" Value="3" />
                                    <Setter Property="IsChecked" Value="{Binding Path=HsTypeIsAdvanced, Mode=TwoWay}" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="ToolTip" Value="{x:Static Localization:Localization.CbAdvancedHotstringToolTip}" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <TextBox x:Name="TbHotstringCode">
                            <TextBox.Text>
                                <Binding>
                                    <Binding.NotifyOnValidationError>True</Binding.NotifyOnValidationError>
                                    <Binding.Path>Value</Binding.Path>
                                    <Binding.UpdateSourceTrigger>PropertyChanged</Binding.UpdateSourceTrigger>
                                    <Binding.ValidatesOnDataErrors>True</Binding.ValidatesOnDataErrors>
                                </Binding>
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="AcceptsTab" Value="True" />
                                    <Setter Property="Grid.ColumnSpan" Value="2" />
                                    <Setter Property="Grid.Row" Value="4" />
                                    <Setter Property="Grid.RowSpan" Value="1" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HsTypeIsAdvanced}" Value="True">
                                            <Setter Property="AcceptsReturn" Value="True" />
                                            <Setter Property="Grid.RowSpan" Value="2" />
                                            <Setter Property="VerticalContentAlignment" Value="Top" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <Grid x:Name="gridHotstringOps" Grid.Column="1" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ItemsControl x:Name="IcHotstringErrors" Style="{StaticResource IcMessages}" ItemsSource="{Binding Path=MessageQueue}" />
                        <Button x:Name="BtnAddHotstringForExtraction">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ExtractionButton}">
                                    <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdAddHotstringForExtraction}" />
                                    <Setter Property="CommandParameter" Value="{Binding CurrentlyActive}" />
                                    <Setter Property="Grid.Column" Value="1" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnHotstringSave">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource OpsButton}">
                                    <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdSaveCurrentHotstring}" />
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.BtnHotstringSaveContent}" />
                                    <Setter Property="Grid.Column" Value="2" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnHotstringRemove">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource RemoveButton}">
                                    <Setter Property="Command" Value="{Binding Path=CmdRemove}" />
                                    <Setter Property="CommandParameter" Value="{Binding Path=CurrentlyActive}" />
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="TiVariables" DataContext="{Binding VariableVM, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Header="{x:Static Localization:Localization.TiHVariablesHeader}">
                <TabItem.InputBindings>
                    <KeyBinding Command="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=CmdSaveCurrentlyActive}" Gesture="CTRL+S" />
                </TabItem.InputBindings>
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CvsVariableList" Source="{Binding Path=VariableList, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" IsLiveSortingRequested="True">
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" PropertyName="Name" />
                        </CollectionViewSource.SortDescriptions>
                        <CollectionViewSource.LiveSortingProperties>
                            <System:String>Name</System:String>
                        </CollectionViewSource.LiveSortingProperties>
                    </CollectionViewSource>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView x:Name="LvVariables">
                        <ListView.Style>
                            <Style TargetType="ListView" BasedOn="{StaticResource LvBaseStyle}">
                                <Setter Property="DisplayMemberPath" Value="Name" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsVariableList}}" />
                                <Setter Property="SelectedItem" Value="{Binding SelectedVariable, Mode=OneWay}" />
                            </Style>
                        </ListView.Style>
                    </ListView>
                    <Grid x:Name="gridVariable" Grid.Column="1">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="DataContext" Value="{Binding Path=CurrentlyActive, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <Trigger Property="DataContext" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding New}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TbVariableName}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label x:Name="LblVariableNameTitle" Content="{x:Static Localization:Localization.LblVariableNameTitleContent}" />
                        <TextBox x:Name="TbVariableName" Grid.Row="1">
                            <TextBox.Text>
                                <Binding ElementName="gridVariable" Path="DataContext.Name" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True" />
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}" />
                            </TextBox.Style>
                        </TextBox>
                        <Label x:Name="LblVariableValueTitle" Grid.Row="2" Content="{x:Static Localization:Localization.LblVariableValueTitleContent}" />
                        <TextBox x:Name="TbVariableValue" Grid.Row="3">
                            <TextBox.Text>
                                <Binding ElementName="gridVariable" Path="DataContext.Value" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True" />
                            </TextBox.Text>
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="AcceptsTab" Value="True" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <Grid x:Name="gridVariableOps" Grid.Column="1" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ItemsControl x:Name="IcVariableErrors" Style="{StaticResource IcMessages}" ItemsSource="{Binding Path=MessageQueue}" />
                        <Button x:Name="BtnAddVariableForExtraction" Grid.Column="1">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ExtractionButton}">
                                    <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdAddVariableForExtraction}" />
                                    <Setter Property="CommandParameter" Value="{Binding CurrentlyActive}" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnVariableSave" Grid.Column="2" Style="{StaticResource OpsButton}" Command="{Binding ElementName=Window, Path=DataContext.CmdSaveCurrentVariable}" Content="{x:Static Localization:Localization.BtnVariableSaveContent}" />
                        <Button x:Name="BtnVariableRemove">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource RemoveButton}">
                                    <Setter Property="Command" Value="{Binding Path=CmdRemove}" />
                                    <Setter Property="CommandParameter" Value="{Binding Path=CurrentlyActive}" />
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="TiFunctions">
                <TabItem.DataContext>
                    <Binding>
                        <Binding.Path>FunctionVM</Binding.Path>
                    </Binding>
                </TabItem.DataContext>
                <TabItem.InputBindings>
                    <KeyBinding Command="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=CmdSaveCurrentlyActive}" Gesture="CTRL+S" />
                </TabItem.InputBindings>
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CvsFunctionsList" Source="{Binding Path=FunctionList, UpdateSourceTrigger=PropertyChanged}">
                        <CollectionViewSource.IsLiveSortingRequested>True</CollectionViewSource.IsLiveSortingRequested>
                        <CollectionViewSource.LiveSortingProperties>
                            <System:String>Name</System:String>
                        </CollectionViewSource.LiveSortingProperties>
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" PropertyName="Name" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Setter Property="Header" Value="{x:Static Localization:Localization.TiFunctionsHeader}" />
                    </Style>
                </TabItem.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView x:Name="LvFunctions" SelectionChanged="LvFunctions_SelectionChanged">
                        <ListView.Style>
                            <Style TargetType="ListView" BasedOn="{StaticResource LvBaseStyle}">
                                <Setter Property="DisplayMemberPath" Value="Name" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsFunctionsList}}" />
                                <Setter Property="SelectedIndex" Value="-1" />
                            </Style>
                        </ListView.Style>
                    </ListView>
                    <Grid x:Name="gridFunction">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="DataContext" Value="{Binding ElementName=TiFunctions, Path=DataContext.CurrentlyActive, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TbFunctionCode}" />
                                <Setter Property="Grid.Column" Value="1" />
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.New}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TbFunctionName}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition Height="{StaticResource RowHeight}" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label x:Name="LblFunctionNameTitle">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.LblFunctionNameTitleContent}" />
                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox x:Name="TbFunctionName">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="Grid.Column" Value="1" />
                                    <Setter Property="Text" Value="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Expander x:Name="ExpParameters">
                            <Expander.Style>
                                <Style TargetType="Expander">
                                    <Setter Property="Grid.Column" Value="2" />
                                    <Setter Property="Grid.RowSpan" Value="1" />
                                    <Setter Property="Header" Value="{x:Static Localization:Localization.ExpParametersHeader}" />
                                    <Setter Property="IsExpanded" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=IcFunctionParameterList, Path=Items.Count}" Value="0">
                                            <Setter Property="IsExpanded" Value="False" />
                                        </DataTrigger>
                                        <Trigger Property="IsExpanded" Value="True">
                                            <Setter Property="Grid.RowSpan" Value="{Binding ElementName=gridFunction, Path=RowDefinitions.Count}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                            <ScrollViewer>
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer">
                                        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                                        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                    </Style>
                                </ScrollViewer.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="BtnFunctionAddParameter">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                                <Setter Property="Command" Value="{Binding ElementName=TiFunctions, Path=DataContext.CmdAddParameter}" />
                                                <Setter Property="CommandParameter" Value="{Binding ElementName=gridFunction, Path=DataContext}" />
                                                <Setter Property="Content" Value="{x:Static Localization:Localization.BtnFunctionAddParameterContent}" />
                                                <Setter Property="VerticalAlignment" Value="Top" />
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <ItemsControl x:Name="IcFunctionParameterList">
                                        <ItemsControl.Resources>
                                            <System:Double x:Key="ButtonSize">15</System:Double>
                                        </ItemsControl.Resources>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBox>
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                                                <Setter Property="Text" Value="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}" />
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <Button>
                                                        <Button.Style>
                                                            <Style TargetType="Button">
                                                                <Setter Property="Command" Value="{Binding ElementName=TiFunctions, Path=DataContext.CmdRemoveParameter}" />
                                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Text="x" Margin="0,-3,0,0" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Grid.Column" Value="1" />
                                                                <Setter Property="Height" Value="{StaticResource ButtonSize}" />
                                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                                <Setter Property="Padding" Value="0" />
                                                                <Setter Property="ToolTip" Value="{x:Static Localization:Localization.BtnFunctionRemoveParameterToolTip}" />
                                                                <Setter Property="Width" Value="{StaticResource ButtonSize}" />
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Setter Property="Grid.Row" Value="2" />
                                                <Setter Property="ItemsSource" Value="{Binding ElementName=gridFunction, Path=DataContext.ParameterList}" />
                                            </Style>
                                        </ItemsControl.Style>
                                    </ItemsControl>
                                </Grid>
                            </ScrollViewer>
                        </Expander>
                        <TextBlock x:Name="TblFunctionHeader" Grid.Row="2">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Grid.ColumnSpan" Value="3" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="Text" Value="{Binding ElementName=TiFunctions, Path=DataContext.FunctionHeader, UpdateSourceTrigger=PropertyChanged}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ExpParameters, Path=IsExpanded}" Value="True">
                                            <Setter Property="Grid.ColumnSpan" Value="2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox x:Name="TbFunctionCode" Grid.Row="3">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                    <Setter Property="AcceptsReturn" Value="True" />
                                    <Setter Property="AcceptsTab" Value="True" />
                                    <Setter Property="Grid.ColumnSpan" Value="3" />
                                    <Setter Property="Text" Value="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ExpParameters, Path=IsExpanded}" Value="True">
                                            <Setter Property="Grid.ColumnSpan" Value="2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <Grid x:Name="gridFunctionOps" Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ItemsControl x:Name="IcFunctionErrors" Style="{StaticResource IcMessages}" ItemsSource="{Binding Path=MessageQueue}" />
                        <Button x:Name="BtnAddFunctionForExtraction">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ExtractionButton}">
                                    <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdAddFunctionForExtraction}" />
                                    <Setter Property="CommandParameter" Value="{Binding CurrentlyActive}" />
                                    <Setter Property="Grid.Column" Value="1" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnFunctionSave">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource OpsButton}">
                                    <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdSaveCurrentFunction}" />
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.BtnFunctionSaveContent}" />
                                    <Setter Property="Grid.Column" Value="2" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnFunctionRemove">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource RemoveButton}">
                                    <Setter Property="Command" Value="{Binding Path=CmdRemove}" />
                                    <Setter Property="CommandParameter" Value="{Binding Path=CurrentlyActive}" />
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="TiToExtract" Header="{x:Static Localization:Localization.TiToExtractHeader}" DataContext="{Binding Path=ExtractionVM, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CvsToExtract" Source="{Binding Path=ToExtract, UpdateSourceTrigger=PropertyChanged}">
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription PropertyName="Name" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label>
                        <Label.Style>
                            <Style TargetType="Label" BasedOn="{StaticResource LblBaseStyle}">
                                <Setter Property="Content" Value="{x:Static Localization:Localization.LvExtractListTitleContent}" />
                            </Style>
                        </Label.Style>
                    </Label>
                    <ListView x:Name="LvExtractList">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Resources>
                            <System:Double x:Key="ImgSize">13</System:Double>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="15,2,2,2" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <DataTemplate DataType="{x:Type Model:AhkFunction}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Height="{StaticResource ImgSize}" Width="{StaticResource ImgSize}" Source="{Binding Source={x:Static r:Resources.FunIcon}}" />
                                    <TextBlock Text="{Binding Name}" FontStyle="Italic" FontWeight="Bold" />
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type Model:AhkHotstring}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Height="{StaticResource ImgSize}" Width="{StaticResource ImgSize}" Source="{Binding Source={x:Static r:Resources.HsIcon}}" />
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type Model:AhkVariable}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Height="{StaticResource ImgSize}" Width="{StaticResource ImgSize}" Source="{Binding Source={x:Static r:Resources.VarIcon}}" />
                                    <TextBlock Text="{Binding Name}" FontStyle="Italic" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.ItemsSource>
                            <Binding Source="{StaticResource CvsToExtract}" UpdateSourceTrigger="PropertyChanged" />
                        </ListView.ItemsSource>
                        <ListView.Style>
                            <Style TargetType="ListView" BasedOn="{StaticResource LvBaseStyle}">
                                <Setter Property="Grid.Row" Value="1" />
                            </Style>
                        </ListView.Style>
                    </ListView>
                    <Grid Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button x:Name="BtnExtractToScript">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding CmdExtractToScript}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnExtractToScriptContent}" />
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="BtnExtractToXml">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding CmdExtractToXml}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnExtractToXmlContent}" />
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <Button x:Name="BtnRemoveFromExtractList">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                    <Setter Property="Command" Value="{Binding CmdRemoveFromExtraction}" />
                                    <Setter Property="CommandParameter" Value="{Binding ElementName=LvExtractList, Path=SelectedItem}" />
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.BtnRemoveFromExtractListContent}" />
                                    <Setter Property="Grid.Row" Value="1" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="BtnCancelExtraction">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                    <Setter Property="Command" Value="{Binding CmdCancelExtraction}" />
                                    <Setter Property="Content" Value="{x:Static Localization:Localization.BtnCancelExtractionContent}" />
                                    <Setter Property="Grid.Row" Value="2" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                </Style>
                            </Button.Style>
                        </Button>
                        <ItemsControl x:Name="IcExtraction" Grid.Row="3" Style="{StaticResource IcMessages}" ItemsSource="{Binding Path=MessageQueue}" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="TiSettings">
                <TabItem.DataContext>
                    <Binding>
                        <Binding.Path>SettingVM</Binding.Path>
                    </Binding>
                </TabItem.DataContext>
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Setter Property="Header" Value="{x:Static Localization:Localization.TiSettingsHeader}" />
                    </Style>
                </TabItem.Style>
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CvsSettings" Source="{Binding Path=SettingList, UpdateSourceTrigger=PropertyChanged}">
                        <CollectionViewSource.IsLiveFilteringRequested>True</CollectionViewSource.IsLiveFilteringRequested>
                        <CollectionViewSource.IsLiveSortingRequested>True</CollectionViewSource.IsLiveSortingRequested>
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" PropertyName="Name" />
                        </CollectionViewSource.SortDescriptions>
                        <CollectionViewSource.LiveSortingProperties>
                            <System:String>Name</System:String>
                        </CollectionViewSource.LiveSortingProperties>
                    </CollectionViewSource>
                    <CollectionViewSource x:Key="CvsSettingGroups" Source="{Binding Path=SettingGroupsList, UpdateSourceTrigger=PropertyChanged}">
                        <CollectionViewSource.IsLiveFilteringRequested>True</CollectionViewSource.IsLiveFilteringRequested>
                        <CollectionViewSource.IsLiveSortingRequested>True</CollectionViewSource.IsLiveSortingRequested>
                        <CollectionViewSource.SortDescriptions>
                            <ComponentModel:SortDescription Direction="Ascending" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ListView x:Name="LvSettingsType">
                            <ListView.Style>
                                <Style TargetType="ListView" BasedOn="{StaticResource LvBaseStyle}">
                                    <Setter Property="Grid.RowSpan" Value="2" />
                                    <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsSettingGroups}, UpdateSourceTrigger=PropertyChanged}" />
                                </Style>
                            </ListView.Style>
                        </ListView>
                        <ScrollViewer Grid.Column="1">
                            <ScrollViewer.Style>
                                <Style TargetType="ScrollViewer">
                                    <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                                    <Setter Property="Margin" Value="{StaticResource StdMargin}" />
                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                </Style>
                            </ScrollViewer.Style>
                            <Grid>
                                <ItemsControl x:Name="IcSettings" ItemsSource="{Binding Source={StaticResource CvsSettings}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.5*" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="{StaticResource RowHeight}" />
                                                </Grid.RowDefinitions>
                                                <Label>
                                                    <Label.Style>
                                                        <Style TargetType="Label">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Binding>
                                                                        <Binding.Path>DisplayName</Binding.Path>
                                                                    </Binding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                                <ContentControl>
                                                    <ContentControl.Style>
                                                        <Style TargetType="ContentControl">
                                                            <Setter Property="ContentTemplate">
                                                                <Setter.Value>
                                                                    <DataTemplate>
                                                                        <TextBox>
                                                                            <TextBox.Text>
                                                                                <Binding Path="DataContext.Value" RelativeSource="{RelativeSource AncestorType={x:Type ContentControl}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnSourceUpdated="True">
                                                                                    <Binding.ValidationRules>
                                                                                        <Validation:ValidateSettingValue ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue" />
                                                                                    </Binding.ValidationRules>
                                                                                </Binding>
                                                                            </TextBox.Text>
                                                                            <TextBox.Style>
                                                                                <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}" />
                                                                            </TextBox.Style>
                                                                        </TextBox>
                                                                    </DataTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Grid.Column" Value="1" />
                                                            <Style.Triggers>
                                                                <DataTrigger>
                                                                    <DataTrigger.Binding>
                                                                        <Binding>
                                                                            <Binding.Path>SettingType</Binding.Path>
                                                                        </Binding>
                                                                    </DataTrigger.Binding>
                                                                    <DataTrigger.Value>List</DataTrigger.Value>
                                                                    <Setter Property="ContentTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <ComboBox>
                                                                                    <ComboBox.Style>
                                                                                        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBaseStyle}">
                                                                                            <Setter Property="IsEditable" Value="True" />
                                                                                            <Setter Property="ItemsSource">
                                                                                                <Setter.Value>
                                                                                                    <Binding>
                                                                                                        <Binding.Path>DataContext.AvailableValues</Binding.Path>
                                                                                                        <Binding.RelativeSource>
                                                                                                            <RelativeSource>
                                                                                                                <RelativeSource.AncestorType>
                                                                                                                    <x:Type Type="ContentControl" />
                                                                                                                </RelativeSource.AncestorType>
                                                                                                            </RelativeSource>
                                                                                                        </Binding.RelativeSource>
                                                                                                    </Binding>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </ComboBox.Style>
                                                                                    <ComboBox.Text>
                                                                                        <Binding>
                                                                                            <Binding.Path>DataContext.Value</Binding.Path>
                                                                                            <Binding.RelativeSource>
                                                                                                <RelativeSource>
                                                                                                    <RelativeSource.AncestorType>
                                                                                                        <x:Type Type="ContentControl" />
                                                                                                    </RelativeSource.AncestorType>
                                                                                                </RelativeSource>
                                                                                            </Binding.RelativeSource>
                                                                                            <Binding.ValidationRules>
                                                                                                <Validation:ValidateSettingValue>
                                                                                                    <Validation:ValidateSettingValue.ValidatesOnTargetUpdated>True</Validation:ValidateSettingValue.ValidatesOnTargetUpdated>
                                                                                                    <Validation:ValidateSettingValue.ValidationStep>CommittedValue</Validation:ValidateSettingValue.ValidationStep>
                                                                                                </Validation:ValidateSettingValue>
                                                                                            </Binding.ValidationRules>
                                                                                        </Binding>
                                                                                    </ComboBox.Text>
                                                                                </ComboBox>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                                <DataTrigger>
                                                                    <DataTrigger.Binding>
                                                                        <Binding>
                                                                            <Binding.Path>SettingType</Binding.Path>
                                                                        </Binding>
                                                                    </DataTrigger.Binding>
                                                                    <DataTrigger.Value>FileInfo</DataTrigger.Value>
                                                                    <Setter Property="ContentTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition />
                                                                                        <ColumnDefinition Width="Auto" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <ComboBox>
                                                                                        <ComboBox.Style>
                                                                                            <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBaseStyle}">
                                                                                                <Setter Property="IsEditable" Value="True" />
                                                                                                <Setter Property="ItemsSource">
                                                                                                    <Setter.Value>
                                                                                                        <Binding>
                                                                                                            <Binding.Path>DataContext.AvailableValues</Binding.Path>
                                                                                                            <Binding.RelativeSource>
                                                                                                                <RelativeSource>
                                                                                                                    <RelativeSource.AncestorType>
                                                                                                                        <x:Type Type="ContentControl" />
                                                                                                                    </RelativeSource.AncestorType>
                                                                                                                </RelativeSource>
                                                                                                            </Binding.RelativeSource>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ComboBox.Style>
                                                                                        <ComboBox.Text>
                                                                                            <Binding Mode="TwoWay" Path="DataContext.Value" RelativeSource="{RelativeSource AncestorType={x:Type ContentControl}}">
                                                                                                <Binding.ValidationRules>
                                                                                                    <Validation:ValidateSettingValue ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue" />
                                                                                                    <Validation:ValidateDirectoryPath ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue" />
                                                                                                </Binding.ValidationRules>
                                                                                            </Binding>
                                                                                        </ComboBox.Text>
                                                                                    </ComboBox>
                                                                                    <Button>
                                                                                        <Button.Style>
                                                                                            <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                                                                                <Setter Property="Command">
                                                                                                    <Setter.Value>
                                                                                                        <Binding>
                                                                                                            <Binding.ElementName>TiSettings</Binding.ElementName>
                                                                                                            <Binding.Path>DataContext.CmdGetDirectory</Binding.Path>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="CommandParameter">
                                                                                                    <Setter.Value>
                                                                                                        <Binding>
                                                                                                            <Binding.RelativeSource>
                                                                                                                <RelativeSource>
                                                                                                                    <RelativeSource.AncestorType>
                                                                                                                        <x:Type Type="ContentControl" />
                                                                                                                    </RelativeSource.AncestorType>
                                                                                                                </RelativeSource>
                                                                                                            </Binding.RelativeSource>
                                                                                                            <Binding.Path>DataContext</Binding.Path>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="Content" Value="{x:Static Localization:Localization.BtnGetSettingFolder}" />
                                                                                                <Setter Property="Grid.Column" Value="1" />
                                                                                            </Style>
                                                                                        </Button.Style>
                                                                                    </Button>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                                <Button>
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                                            <Setter Property="Command">
                                                                <Setter.Value>
                                                                    <Binding>
                                                                        <Binding.ElementName>TiSettings</Binding.ElementName>
                                                                        <Binding.Path>DataContext.CmdResetDefault</Binding.Path>
                                                                    </Binding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="CommandParameter">
                                                                <Setter.Value>
                                                                    <Binding>
                                                                        <Binding.Path>.</Binding.Path>
                                                                    </Binding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Content" Value="{x:Static Localization:Localization.SettingsResetValueButtonContent}" />
                                                            <Setter Property="Grid.Column" Value="2" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </ScrollViewer>
                        <Grid Grid.Column="1" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ItemsControl x:Name="IcSettingsErrors">
                                <ItemsControl.Style>
                                    <Style TargetType="ItemsControl" BasedOn="{StaticResource IcMessages}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=MessageQueue}" />
                                    </Style>
                                </ItemsControl.Style>
                            </ItemsControl>
                            <Button x:Name="BtnSaveSettings">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command">
                                            <Setter.Value>
                                                <Binding>
                                                    <Binding.ElementName>TiSettings</Binding.ElementName>
                                                    <Binding.Path>DataContext.CmdSaveSettings</Binding.Path>
                                                </Binding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="CommandParameter">
                                            <Setter.Value>
                                                <Binding>
                                                    <Binding.ElementName>IcSettings</Binding.ElementName>
                                                </Binding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnSaveSettingsContent}" />
                                        <Setter Property="Grid.Column" Value="1" />
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Grid>
                    <Expander x:Name="ExpImport">
                        <Expander.Resources>
                            <CollectionViewSource x:Key="CvsImportFunctions" Source="{Binding FunctionsReadFromFile, UpdateSourceTrigger=PropertyChanged}" IsLiveSortingRequested="True">
                                <CollectionViewSource.SortDescriptions>
                                    <ComponentModel:SortDescription PropertyName="Name" Direction="Ascending" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                            <CollectionViewSource x:Key="CvsImportHotstrings" Source="{Binding HotstringsReadFromFile, UpdateSourceTrigger=PropertyChanged}" IsLiveSortingRequested="True">
                                <CollectionViewSource.SortDescriptions>
                                    <ComponentModel:SortDescription PropertyName="Name" Direction="Ascending" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                            <CollectionViewSource x:Key="CvsImportVariables" Source="{Binding VariablesReadFromFile, UpdateSourceTrigger=PropertyChanged}" IsLiveSortingRequested="True">
                                <CollectionViewSource.SortDescriptions>
                                    <ComponentModel:SortDescription PropertyName="Name" Direction="Ascending" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                        </Expander.Resources>
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Grid.Row" Value="1" />
                                <Setter Property="Header" Value="{x:Static Localization:Localization.ExpImportHeader}" />
                                <Setter Property="IsExpanded" Value="False" />
                                <Setter Property="MaxHeight" Value="400" />
                            </Style>
                        </Expander.Style>
                        <Grid x:Name="GridImport">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label" BasedOn="{StaticResource LblBaseStyle}">
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.LblImportFileContent}" />
                                    </Style>
                                </Label.Style>
                            </Label>
                            <TextBox>
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TbBaseStyle}">
                                        <Setter Property="Grid.Column" Value="1" />
                                        <Setter Property="Grid.ColumnSpan" Value="3" />
                                        <Setter Property="Text" Value="{Binding FileToImportPath}" />
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label" BasedOn="{StaticResource LblBaseStyle}">
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.LblHotstringsToImportTitle}" />
                                        <Setter Property="Grid.Column" Value="1" />
                                        <Setter Property="Grid.Row" Value="1" />
                                    </Style>
                                </Label.Style>
                            </Label>
                            <ScrollViewer>
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer" BasedOn="{StaticResource SvImportStyle}">
                                        <Setter Property="Grid.Column" Value="1" />
                                    </Style>
                                </ScrollViewer.Style>
                                <ItemsControl x:Name="IcHotstringsToImport">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding ImportThis, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxBaseStyle}" />
                                                <TextBlock Text="{Binding Name}" Margin="10,5" ToolTip="{Binding Value}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsImportHotstrings},UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Margin" Value="0" />
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>
                            </ScrollViewer>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label" BasedOn="{StaticResource LblBaseStyle}">
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.LblVariablesToImportTitle}" />
                                        <Setter Property="Grid.Column" Value="2" />
                                        <Setter Property="Grid.Row" Value="1" />
                                    </Style>
                                </Label.Style>
                            </Label>
                            <ScrollViewer>
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer" BasedOn="{StaticResource SvImportStyle}">
                                        <Setter Property="Grid.Column" Value="2" />
                                    </Style>
                                </ScrollViewer.Style>
                                <ItemsControl x:Name="IcVariablesToImport">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding ImportThis, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxBaseStyle}" />
                                                <TextBlock Text="{Binding Name}" Margin="10,5" ToolTip="{Binding Value}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsImportVariables},UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Margin" Value="0" />
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>
                            </ScrollViewer>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label" BasedOn="{StaticResource LblBaseStyle}">
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.LblFunctionsToImportTitle}" />
                                        <Setter Property="Grid.Column" Value="3" />
                                        <Setter Property="Grid.Row" Value="1" />
                                    </Style>
                                </Label.Style>
                            </Label>
                            <ScrollViewer>
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer" BasedOn="{StaticResource SvImportStyle}">
                                        <Setter Property="Grid.Column" Value="3" />
                                    </Style>
                                </ScrollViewer.Style>
                                <ItemsControl x:Name="IcFunctionsToImport">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding ImportThis, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxBaseStyle}" />
                                                <TextBlock Text="{Binding Name}" Margin="10,5" ToolTip="{Binding Value}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="ItemsSource" Value="{Binding Source={StaticResource CvsImportFunctions},UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Margin" Value="0" />
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>
                            </ScrollViewer>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding CmdSelectFileToImport}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnImportFileContent}" />
                                        <Setter Property="Grid.Row" Value="1" />
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdReadFileForImport}" />
                                        <Setter Property="CommandParameter" Value="{Binding ElementName=IcObjectsToImport, Path=ItemsSource}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnImportReadFile}" />
                                        <Setter Property="Grid.Row" Value="2" />
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdSelectAll}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnImportSelectAll}" />
                                        <Setter Property="Grid.Row" Value="3" />
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdSelectNone}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnImportSelectNone}" />
                                        <Setter Property="Grid.Row" Value="4" />
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                                        <Setter Property="Command" Value="{Binding ElementName=Window, Path=DataContext.CmdStartImport}" />
                                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnStartImport}" />
                                        <Setter Property="Grid.Row" Value="5" />
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Expander>
                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
            <CheckBox x:Name="CbSaveWithMenu">
                <CheckBox.Style>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
                        <Setter Property="Content" Value="{x:Static Localization:Localization.CbSaveWithMenuContent}" />
                        <Setter Property="IsChecked">
                            <Setter.Value>
                                <Binding>
                                    <Binding.Mode>TwoWay</Binding.Mode>
                                    <Binding.Path>SettingVM.IncludeMenu</Binding.Path>
                                </Binding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <Button x:Name="BtnSave">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
                        <Setter Property="Command">
                            <Setter.Value>
                                <Binding>
                                    <Binding.Path>CmdSaveToFile</Binding.Path>
                                </Binding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Content" Value="{x:Static Localization:Localization.BtnSaveContent}" />
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>